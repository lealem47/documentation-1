name: Docs Build Test

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        repository: matusnovak/doxybook2
        path: ./doxy
        fetch-depth: 0
        ref: 1e5f8f0879aa1e908ccce25064ceb7604e1ed94a
    - name: Download Japanese fonts
      run: curl -LO https://github.com/googlefonts/noto-cjk/blob/main/Sans/OTF/Japanese/NotoSansCJKjp-Black.otf && curl -LO https://github.com/googlefonts/noto-cjk/blob/main/Sans/OTF/Japanese/NotoSansCJKjp-Bold.otf && curl -LO https://github.com/googlefonts/noto-cjk/blob/main/Sans/OTF/Japanese/NotoSansCJKjp-DemiLight.otf && curl -LO https://github.com/googlefonts/noto-cjk/blob/main/Sans/OTF/Japanese/NotoSansCJKjp-Light.otf && curl -LO https://github.com/googlefonts/noto-cjk/blob/main/Sans/OTF/Japanese/NotoSansCJKjp-Medium.otf && curl -LO https://github.com/googlefonts/noto-cjk/blob/main/Sans/OTF/Japanese/NotoSansCJKjp-Regular.otf && curl -LO https://github.com/googlefonts/noto-cjk/blob/main/Sans/OTF/Japanese/NotoSansCJKjp-Thin.otf
    - name: Install Japanese fonts
      run: sudo mkdir -p /usr/local/share/fonts/opentype; sudo cp NotoSans* /usr/local/share/fonts/opentype/. && sudo fc-cache -f -v
    - name: wget vcpkg
      working-directory: ./doxy 
      run: wget -O vcpkg.tar.gz https://github.com/microsoft/vcpkg/archive/master.tar.gz
    - name: mkdir vcpkg
      working-directory: ./doxy 
      run: sudo mkdir /opt/vcpkg
    - name: tar vcpkg
      working-directory: ./doxy 
      run: sudo tar xf vcpkg.tar.gz --strip-components=1 -C /opt/vcpkg
    - name: build vcpkg
      working-directory: ./doxy 
      run: sudo /opt/vcpkg/bootstrap-vcpkg.sh
    - name: Doxybook depenecies
      working-directory: ./doxy 
      run: vcpkg install --triplet x64-linux $(cat vcpkg.txt)
    - name: doxy mkdir build
      working-directory: ./doxy 
      run: mkdir build
    - name: doxy cmake setup
      working-directory: ./doxy 
      run: cmake -B ./build -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake .
    - name: doxy cmake
      working-directory: ./doxy 
      run: cmake --build ./build --config MinSizeRel
    - name: doxybook2 add to path
      working-directory: ./doxy
      run: sudo cp $PWD/build/src/DoxybookCli/doxybook2 /usr/bin/. 
    - uses: actions/checkout@master
    - name: Install Dependencies
      run:  sudo apt install pandoc texlive-full mkdocs doxygen
    - name: wolfssl html
      run: cd wolfSSL && export PATH=$PATH:"/home/runner/work/documentation" && make html
    - name: wolfssl pdf
      run: cd wolfSSL && export PATH=$PATH:"/home/runner/work/documentation" && make pdf
    - name: wolfssh html
      run: cd wolfSSH && export PATH=$PATH:"/home/runner/work/documentation" && make html
    - name: wolfssh pdf
      run: cd wolfSSH && export PATH=$PATH:"/home/runner/work/documentation" && make pdf
    - name: wolftpm html
      run: cd wolfTPM && export PATH=$PATH:"/home/runner/work/documentation" && make html
    - name: wolfTPM pdf
      run: cd wolfTPM && export PATH=$PATH:"/home/runner/work/documentation" && make pdf
    - name: wolfmqtt html
      run: cd wolfMQTT && export PATH=$PATH:"/home/runner/work/documentation" && make html
    - name: wolfmqtt pdf
      run: cd wolfMQTT && export PATH=$PATH:"/home/runner/work/documentation" && make pdf
    - name: wolfBoot html
      run: cd wolfBoot && export PATH=$PATH:"/home/runner/work/documentation" && make html
    - name: wolfBoot pdf
      run: cd wolfBoot && export PATH=$PATH:"/home/runner/work/documentation" && make pdf
    - name: wolfSentry html
      run: cd wolfSentry && export PATH=$PATH:"/home/runner/work/documentation" && make html
    - name: wolfSentry pdf
      run: cd wolfSentry && export PATH=$PATH:"/home/runner/work/documentation" && make pdf
    - name: wolfclu html
      run: cd wolfCLU && export PATH=$PATH:"/home/runner/work/documentation" && make html
    - name: wolfclu pdf
      run: cd wolfCLU && export PATH=$PATH:"/home/runner/work/documentation" && make pdf
    - name: wolfssl-jni html
      run: cd wolfSSL-JNI && export PATH=$PATH:"/home/runner/work/documentation" && make html
    - name: wolfssl-jni pdf
      run: cd wolfSSL-JNI && export PATH=$PATH:"/home/runner/work/documentation" && make pdf
    - name: wolfcrypt-jni html
      run: cd wolfCrypt-JNI && export PATH=$PATH:"/home/runner/work/documentation" && make html
    - name: wolfcrypt-jni pdf
      run: cd wolfCrypt-JNI && export PATH=$PATH:"/home/runner/work/documentation" && make pdf
